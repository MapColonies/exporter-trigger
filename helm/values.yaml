global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: ""
  serviceUrls:
    catalogManager: ""
    heartbeatManager: ""
    jobManager: ""
    downloadServer: ""
  jobManagement:
    jobDomain: ""
    exporter:
      jobType: ""
      taskTilesType: ""
      taskFinalizeType: ""
  storage:
    tilesStorageProvider: ""
    fs:
      internalPvc:
        enabled: false
        name: ""
        gpkgSubPath: ""
  ingress:
    domain: 'apps.aroapp.io'          

serviceUrls:
  catalogManager: ""
  heartbeatManager: ""
  jobManager: ""
  downloadServer: ""
jobManagement:
  jobDomain: RASTER
  exporter:
    jobType: ""
    taskTilesType: ""
    taskFinalizeType: ""
storage:
  tilesStorageProvider: ''
  fs:
    internalPvc:
      enabled: false
      name: ""
      gpkgSubPath: ""

enabled: true
environment: development
replicaCount: 1
initialDelaySeconds: 60
nodePort: 30030 #for minikube deployment only
resetOnConfigChange: true
imagePullPolicy: Always

cloudProvider:
  dockerRegistryUrl: my-registry-url.io
  flavor: openshift
  imagePullSecretName: acr-registry

image:
  repository: exporter-trigger
  tag: 'latest'

# add pod annotations
# example:
# podAnnotations:
  # annotation1: annotation-value-1
  # annotation2: annotation-value-2
podAnnotations: {}

env:
  port: 8080
  targetPort: 8080
  internalPort: 80
  logLevel: info
  logPrettyPrintEnabled: false
  responseCompressionEnabled: true
  requestPayloadLimit: 1mb
  finalizePollingTimeMS: 2000
  disableHttpClientLogs: false
  cleanupExpirationDays: 30
  tracing:
    enabled: false
    url: http://localhost:55681/v1/traces
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics
  httpRetry:
    attempts: 5
    delay: exponential
    shouldResetTimeout: true
  estimatedStorageCalculation:
    jpegTileEstimatedSizeInBytes: 27000
    pngTileEstimatedSizeInBytes: 263000
    storageFactorBuffer: 1.25
    validateStorageSize: true
  queue:
    dequeueFinalizeIntervalMs: 2000
    heartbeatIntervalMs: 300
    finalizeTasksAttempts: 3

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

route:
  enabled: true
  host:
  path: /api/raster/v1
  https: true
  useCert: false
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)

ingress:
  enabled: false
  type: 'nginx-org' # supported values: 'nginx-org' | 'nginx-kubernetes
  path: /
  host: 'localhost'
  cors:
    enabled: true
    origin: '*'
